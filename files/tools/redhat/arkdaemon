#!/bin/bash
#
# /etc/rc.d/init.d/arkmanager
#
# ARK manager daemon
#
# chkconfig: 2345 80 20
# description: ARK manager daemon used to start the server and keep it updated
# processname: ShooterGameServer
# config: /etc/arkmanager/arkmanager.cfg

### BEGIN INIT INFO
# Provides:          ARK manager deamon
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: ARK manager deamon
# Description:       ARK manager daemon used to start the server and keep it updated
#
### END INIT INFO

# Using the lsb functions to perform the operations.
. /etc/rc.d/init.d/functions

# Global variables
source /etc/arkmanager/arkmanager.cfg

NAME="ShooterGameServer"
LOGFILE="${logdir}/${NAME}.log"
DAEMON="/usr/bin/arkmanager"

GREEN="\\033[1;32m"
RED="\\033[1;31m"
NORMAL="\\033[0;39m"

set -e

# If the daemon is not there, then exit.
test -x $DAEMON || exit 5

case "$1" in
  start)
    echo -n "Starting $NAME: "
    ulimit -n 100000
    su -s /bin/sh -c "$DAEMON start" $steamcmd_user > /dev/null
    sleep 5
    PID=`ps -ef | grep $NAME | grep -v grep | awk '{print $2}'`
    if  [ -n "$PID" ];  then
      echo "${PID}" >/var/run/arkmanager.pid
      touch /var/lock/subsys/arkmanager
      echo "[" "$GREEN" " OK " "$NORMAL" "]"
      exit 0
    else
      echo "[" "$RED" " FAILED " "$NORMAL" "]"
      exit 1
    fi
  ;;

  stop)
    echo -n "Stopping $NAME: "
    su -s /bin/sh -c "$DAEMON stop" $steamcmd_user > /dev/null
    sleep 5
    PID=`ps -ef | grep $NAME | grep -v grep | awk '{print $2}'`
    if  [ -n "$PID" ];  then
      echo "[" "$RED" " FAILED " "$NORMAL" "]"
      exit 1
    else
      echo "[" "$GREEN" " OK " "$NORMAL" "]"
      rm -f /var/lock/subsys/arkmanager
      rm -f /var/run/arkmanager.pid
      exit 0
    fi
  ;;

  restart)
    echo -n "Restarting $NAME: "
    ulimit -n 100000
    su -s /bin/sh -c "$DAEMON restart" $steamcmd_user > /dev/null
    echo "OK"
  ;;

  status)
    su -s /bin/sh -c "$DAEMON status" $steamcmd_user
    exit 0
  ;;

  *)
    # For invalid arguments, print the usage message.
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
  ;;
esac
